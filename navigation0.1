#pragma config(Sensor, port2,  gyro,           sensorVexIQ_Gyro)
#pragma config(Sensor, port4,  sonar,          sensorVexIQ_Distance)
#pragma config(Sensor, port5,  touch_led,      sensorVexIQ_LED)
#pragma config(Motor,  motor1,          left,          tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor6,          right,         tmotorVexIQ, PIDControl, reversed, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

void forvard(int v, int t)
{
	if(t == 0)
	{
		motor[left] = v;
		motor[right] = v;
	}
	else
	{
		motor[left] = v;
		motor[right] = v;
		delay(t);
	}
}

void left_rotate(int degees)
{
	string s;
	motor[left] = 0;
	motor[right] = 0;
	delay(100);
	resetGyro(gyro);

	motor[left] = -15;
	motor[right] = 15;

	while(getGyroDegrees(gyro)<degees)
	{
		s = getGyroDegrees(gyro);
    displayString(1, s);
	}

	motor[left] = 0;
	motor[right] = 0;
}

void right_rotate(int degees)
{
	string s;
	motor[left] = 0;
	motor[right] = 0;
	delay(100);
	resetGyro(gyro);

	motor[left] = 15;
	motor[right] = -15;

	while(getGyroDegrees(gyro)>-degees)
	{
		s = getGyroDegrees(gyro);
    displayString(1, s);
	}

	motor[left] = 0;
	motor[right] = 0;
}

task main()
{
	left_rotate(90);

}
